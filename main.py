import asyncio
import logging
from aiogram import Bot, Dispatcher
from aiogram.client.default import DefaultBotProperties
from aiogram.enums import ParseMode
from bot.utils.database import engine
from backend.models.base import Base
from bot.config import Config

# –ò–º–ø–æ—Ä—Ç—ã —Ä–æ—É—Ç–µ—Ä–æ–≤ - –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ä–æ—É—Ç–µ—Ä—ã –Ω–∞–ø—Ä—è–º—É—é
from bot.handlers.start import router as start_router
from bot.handlers.faculty_selection import router as faculty_router
from bot.handlers.applications import router as applications_router
from bot.handlers.profile import router as profile_router
from bot.handlers.help import router as help_router
from bot.handlers.common_handlers import router as common_router

async def on_startup():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –±–æ—Ç–∞"""
    # –°–û–ó–î–ê–ï–ú –í–°–ï –¢–ê–ë–õ–ò–¶–´ –≤ –±–∞–∑–µ! (–≠—Ç–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)
    async with engine.begin() as conn:
        await conn.run_sync(Base.metadata.create_all)
    logging.info("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ç–æ–≤–∞!")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º ML-–º–æ–¥–µ–ª—å
    try:
        from bot.utils.ml_model import ensure_model_initialized
        await ensure_model_initialized()
        logging.info("‚úÖ ML-–º–æ–¥–µ–ª—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞!")
    except Exception as e:
        logging.warning(f"‚ö†Ô∏è ML-–º–æ–¥–µ–ª—å –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞: {e}")
        logging.warning("–ë–æ—Ç –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Å —Ä–µ–∑–µ—Ä–≤–Ω—ã–º –∞–ª–≥–æ—Ä–∏—Ç–º–æ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π")

async def main():
    logging.basicConfig(
        level=logging.INFO,
        format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
    )
    
    if not Config.BOT_TOKEN:
        logging.error("BOT_TOKEN –Ω–µ –∑–∞–¥–∞–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è.")
        return

    await on_startup()

    bot = Bot(
        token=Config.BOT_TOKEN,
        default=DefaultBotProperties(parse_mode=ParseMode.HTML)
    )
    dp = Dispatcher()
    
    # –ò–°–ü–†–ê–í–õ–ï–ù–ù–û–ï –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–æ—É—Ç–µ—Ä–æ–≤
    dp.include_router(start_router)
    dp.include_router(faculty_router)
    dp.include_router(applications_router)
    dp.include_router(profile_router)
    dp.include_router(help_router)
    dp.include_router(common_router)
    
    logging.info("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω —Å ML-–º–æ–¥–µ–ª—å—é.")
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())